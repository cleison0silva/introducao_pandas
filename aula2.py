# -*- coding: utf-8 -*-
"""aula2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WXwCIabqFTVDq3KROFwIzy_3GrrQF-x9

TRABALHANDO COM EXCEL
"""

#IMPORTANDO A BIBLIOTECA 

import pandas as pd

#Criando os DataFrames

df1 = pd.read_excel("Aracaju.xlsx")
df2 = pd.read_excel("Fortaleza.xlsx")
df3 = pd.read_excel("Natal.xlsx")
df4 = pd.read_excel("Recife.xlsx")
df5 = pd.read_excel("Salvador.xlsx")

#Unindos os DataFrames

df = pd.concat([df1,df2,df3,df4,df5])

df.head()

df.tail()

#Tipos das dados

df.dtypes

#para saber valores nulos

df.isnull().sum()

#Criando uma coluna com a receita

df["Receita"] = df["Vendas"].mul(df["Qtde"])

df.head()

df["Receita"].max() #Qual a maior receita

df["Receita"].min() #Qual a menor receita

df.nlargest(3, "Receita") #Top 3 maiores receitas

df.nsmallest(3, "Receita") #3 Menores receitas

df.groupby("Cidade")["Receita"].sum() #Total de receita por cidade

"""TRABALHANDO COM DATAS"""

#Receita total por ano

df.groupby(df["Data"].dt.year)["Receita"].sum()

#Criando coluna com o ano da venda

df["Ano Venda"] = df["Data"].dt.year

df.sample(5)

#Criando coluna com o mês e dia da venda

df["Mês Venda"], df["Dia Venda"] = (df["Data"].dt.month, df["Data"].dt.day)

df.sample(5)

df["Data"].min() #menor data de venda

#Criando coluna com o trimestre da venda

df["Trimestre Venda"] = df["Data"].dt.quarter

df.sample(5) #amostra

#Criando um DataFrame com as vendas de março de 2019.

venda_marco_19 = df.loc[(df["Ano Venda"] == 2019) & (df["Mês Venda"] == 3)]

venda_marco_19

#Quantas vendas cada loja realizou

df["LojaID"].value_counts(ascending=False)

"""GRÁFICOS"""

#Gráficos de barras
df["LojaID"].value_counts(ascending=False).plot.bar()

#Gráficos de barras horizontal

df["LojaID"].value_counts(ascending=True).plot.barh();

#Gráfico de Pizza

df.groupby(df["Ano Venda"])["Receita"].sum().plot.pie();

#TOtal de venda por cidade personalizado

import matplotlib.pyplot as plt
df["Cidade"].value_counts().plot.bar(title = "Total de vendas por Cidade");
plt.xlabel("Cidade")
plt.ylabel("Total Vendas")
plt.xticks(rotation="horizontal");

#mudando a cor do gráfico

df["Cidade"].value_counts().plot.bar(title = "Total de vendas por Cidade", color = "red");
plt.xlabel("Cidade")
plt.ylabel("Total Vendas")
plt.xticks(rotation="horizontal");

#Alterando o stilo

plt.style.use("ggplot")

df["Cidade"].value_counts().plot.bar(title = "Total de vendas por Cidade", color = "red");
plt.xlabel("Cidade")
plt.ylabel("Total Vendas")
plt.xticks(rotation="horizontal");

#Gráfico de Linha do Total vendeido por Mês

df.groupby(df["Mês Venda"])["Qtde"].sum().plot(title = "Total Produtos Vendido por Mês")
plt.xlabel("Mês")
plt.ylabel("Total Produtos Vendidos")
plt.legend();

df_2019 = df[df["Ano Venda"] == 2019]

#Total das vendas de 2019

df_2019.groupby(df_2019["Mês Venda"])["Qtde"].sum().plot(marker = "o", title = "Venda 2019")
plt.xlabel("Mês")
plt.ylabel("Total Produtos Vendidos")
plt.legend();

#histograma

plt.hist(df["Qtde"]);

#dispersão

plt.scatter(x=df_2019["Dia Venda"], y = df_2019["Receita"]);

